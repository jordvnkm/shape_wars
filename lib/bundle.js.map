{"version":3,"sources":["webpack:///webpack/bootstrap ac523d1667ba4893ba01","webpack:///./lib/main.js","webpack:///./lib/game.js","webpack:///./lib/engine_particle.js","webpack:///./lib/ship.js","webpack:///./lib/moving_object.js","webpack:///./lib/util.js","webpack:///./lib/bomb.js","webpack:///./lib/enemy.js","webpack:///./lib/particle.js","webpack:///./lib/score_point.js","webpack:///./lib/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACXD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B,0BAAyB,WAAW;AACpC;AACA;AACA,qBAAoB,wBAAwB;AAC5C,+BAA8B,aAAa;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,qB;AACA;AACA;AACA;AACA;AACA,qBAAoB,gBAAgB;AACpC;AACA,2BAA0B,0BAA0B;AACpD;;AAEA,oBAAmB,gBAAgB;AACnC;AACA,2BAA0B,0BAA0B;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;;AAEA;AACA;;;AAGA;AACA;AACA,kBAAiB,uBAAuB;AACxC,oBAAmB,uBAAuB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,WAAW;AAC7B;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA,gBAAe,yBAAyB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,+BAA+B;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;;;AAIH;AACA;AACA,IAAG;;;;AAIH;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA,mBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,iCAAgC,yBAAyB;AACzD;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC3CA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;AChEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;AAGA;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA,4BAA2B,+BAA+B;AAC1D;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;AC5DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,gBAAgB;AACpD;AACA;AACA;;;AAGA;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC5CA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ac523d1667ba4893ba01\n **/","const Game = require(\"./game\");\nconst GameView = require(\"./game_view\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = Game.DIM_X;\n  canvasEl.height = Game.DIM_Y;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game();\n  new GameView(game, ctx).start();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/main.js\n ** module id = 0\n ** module chunks = 0\n **/","// const Asteroid = require(\"./asteroid\");\n// const Bullet = require(\"./bullet\");\nconst EngineParticle = require(\"./engine_particle\");\nconst Ship = require(\"./ship\");\nconst Bomb = require(\"./bomb\");\nconst Enemy = require(\"./enemy\");\nconst Util = require(\"./util\");\nconst Particle = require(\"./particle\");\nconst ScorePoint = require(\"./score_point\");\n\nconst Game = function () {\n  this.enemies = [];\n  this.bombs = [];\n  this.ships = [];\n  this.wave = 1;\n  this.particles = []\n  this.scorePoints = [];\n  this.engineParticles = [];\n  this.score = 0;\n  this.playing = false;\n\n  this.addBombs();\n  this.addShip();\n  // this.addEnemies();\n  setInterval(this.addBombs.bind(this), 5000);\n  setInterval(this.addEnemies.bind(this), 2000);\n};\n\nGame.BG_COLOR = \"green\";\nGame.DIM_X = 1000;\nGame.DIM_Y = 600;\nGame.FPS = 32;\n\nGame.prototype.reset = function(){\n  this.enemies = [];\n  this.bombs = [];\n  this.ships = [];\n  this.wave = 1;\n  this.particles = []\n  this.scorePoints = [];\n  this.engineParticles = [];\n  this.score = 0;\n  this.addBombs();\n  this.addShip();\n  // this.addEnemies();\n}\n\nGame.prototype.add = function (object) {\n\n  if (object instanceof Ship){\n    this.ships.push(object);\n  }\n  else if (object instanceof Bomb){\n    this.bombs.push(object);\n  }\n  else if (object instanceof Enemy){\n    this.enemies.push(object);\n  }\n  else {\n    throw \"wtf\";\n  }\n  // if (object instanceof Asteroid) {\n  //   this.asteroids.push(object);\n  // } else if (object instanceof Bullet) {\n  //   this.bullets.push(object);\n  // } else if (object instanceof Ship) {\n  //   this.ships.push(object);\n  // } else {\n  //   throw \"wtf?\";\n  // }\n};\n\nGame.prototype.addBombs = function () {\n  if (this.playing){\n    if (this.bombs.length >= 15){\n      return;\n    }\n    let amount = this.bombs.length / 2;\n    if (amount < 5){\n      amount = 4;\n    }\n    for (let i = 0; i < amount; i ++){\n      this.add(new Bomb({game: this}));\n    }\n  }\n  // for (var i = 0; i < Game.NUM_ASTEROIDS; i++) {\n  //   this.add(new Asteroid({ game: this }));\n  // }\n};\n\nGame.prototype.randomInSection = function(section){\n  let xcoord;\n  let ycoord;\n  if (section == 0){\n    xcoord = Util.randomInRange(1,150);\n    ycoord = Util.randomInRange(1,150);\n  }\n  else if (section == 1){\n    xcoord = Util.randomInRange(Game.DIM_X - 150, Game.DIM_X);\n    ycoord = Util.randomInRange(1, 150);\n  }\n  else if (section == 2){\n    xcoord = Util.randomInRange(Game.DIM_X - 150, Game.DIM_X);\n    ycoord = Util.randomInRange(Game.DIM_Y - 150, Game.DIM_Y);\n  }\n  else {\n    xcoord = Util.randomInRange(1,150);\n    ycoord = Util.randomInRange(Game.DIM_Y - 150, Game.DIM_Y);\n  }\n  return [xcoord, ycoord];\n}\n\n\nGame.prototype.addEnemies = function(){\n  if (this.playing){    \n    let amount = this.wave * 4\n    if (amount > 40){\n      amount = 40;\n    }\n    for (let i = 0 ; i < amount / 2; i ++){\n      let position = this.randomInSection(this.wave % 4);\n      this.add(new Enemy({game: this, pos: position}));\n    }\n\n    for (let i = 0; i < amount / 2; i ++){\n      let position = this.randomInSection((this.wave + 2) % 4);\n      this.add(new Enemy({game: this, pos: position}));\n    }\n    this.wave += 1;\n  }\n}\n\nGame.prototype.addShip = function () {\n  const ship = new Ship({\n    pos: this.middlePosition(),\n    game: this\n  });\n\n\n  this.add(ship);\n\n  return ship;\n};\n\n\nGame.prototype.checkCollisions = function () {\n  const allObjects = this.allObjects();\n  for (let i = 0; i < allObjects.length; i++) {\n    for (let j = 0; j < allObjects.length; j++) {\n      const obj1 = allObjects[i];\n      const obj2 = allObjects[j];\n\n      if (obj1.isCollidedWith(obj2)) {\n        const collision = obj1.collideWith(obj2);\n        if (collision) return;\n      }\n    }\n  }\n};\n\nGame.prototype.createEngineParticles = function(x, y, color){\n  var minSize = 2;\n  var maxSize = 5;\n  var count = 10;\n  var minSpeed = 60.0;\n  var maxSpeed = 200.0;\n  var minScaleSpeed = 1.0;\n  var maxScaleSpeed = 4.0;\n\n  for (var angle=0; angle<360; angle += Math.round(360/count))\n  {\n    var particle = new EngineParticle();\n\n    particle.x = x;\n    particle.y = y;\n\n    particle.radius = Util.randomFloat(minSize, maxSize);\n\n    particle.color = color;\n\n    particle.scaleSpeed = Util.randomFloat(minScaleSpeed, maxScaleSpeed);\n\n    var speed = Util.randomFloat(minSpeed, maxSpeed);\n\n    particle.velocityX = speed / 5 * Math.cos(angle * Math.PI / 180.0);\n    particle.velocityY = speed / 5 * Math.sin(angle * Math.PI / 180.0);\n\n    this.engineParticles.push(particle);\n  }\n};\n\n\nGame.prototype.createExplosion = function(x, y, color){\n\tvar minSize = 20;\n\tvar maxSize = 50;\n\tvar count = 10;\n\tvar minSpeed = 60.0;\n\tvar maxSpeed = 200.0;\n\tvar minScaleSpeed = 1.0;\n\tvar maxScaleSpeed = 4.0;\n\n\tfor (var angle=0; angle<360; angle += Math.round(360/count))\n\t{\n\t\tvar particle = new Particle();\n\n\t\tparticle.x = x;\n\t\tparticle.y = y;\n\n\t\tparticle.radius = Util.randomFloat(minSize, maxSize);\n\n\t\tparticle.color = color;\n\n\t\tparticle.scaleSpeed = Util.randomFloat(minScaleSpeed, maxScaleSpeed);\n\n\t\tvar speed = Util.randomFloat(minSpeed, maxSpeed);\n\n\t\tparticle.velocityX = speed * Math.cos(angle * Math.PI / 180.0);\n\t\tparticle.velocityY = speed * Math.sin(angle * Math.PI / 180.0);\n\n\t\tthis.particles.push(particle);\n\t}\n};\n\n\n\nGame.prototype.middlePosition = function(){\n  return [(Game.DIM_X / 2), (Game.DIM_Y / 2)];\n};\n\nGame.prototype.allObjects = function () {\n  return [].concat(this.ships, this.bombs, this.enemies, this.scorePoints);\n  // return [].concat(this.ships, this.asteroids, this.bullets);\n};\n\nGame.prototype.draw = function (ctx, delay) {\n  ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n  // ctx.fillStyle = Game.BG_COLOR;\n  // ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n  this.allObjects().forEach((object) => {\n    object.draw(ctx);\n  });\n\n  let particleRemove = [];\n  let engineRemove = [];\n\n  for (let i=0; i<this.particles.length; i++)\n  {\n    let particle = this.particles[i];\n\n    if (particle.scale == 0){\n      particleRemove.push(particle);\n    }\n    else {\n      particle.update();\n      particle.draw(ctx);\n    }\n  }\n\n  for (let i=0; i<this.engineParticles.length; i++)\n  {\n    let particle = this.engineParticles[i];\n\n    if (particle.scale == 0){\n      engineRemove.push(particle);\n    }\n    else {\n      particle.update();\n      particle.draw(ctx);\n    }\n  }\n\n  engineRemove.forEach((particle) => {\n    this.remove(particle);\n  })\n\n\n\n  particleRemove.forEach((particle) => {\n    this.remove(particle);\n  })\n\n\n\n  ctx.font = \"16px Arial\";\n  ctx.fillStyle = \"yellow\";\n  ctx.fillText(\"Score: \"+ this.score, 8, 20);\n};\n\n\nGame.prototype.isOutOfBounds = function (pos) {\n  return (pos[0] < 0) || (pos[1] < 0) ||\n    (pos[0] > Game.DIM_X) || (pos[1] > Game.DIM_Y);\n};\n\n\nGame.prototype.moveObjects = function (delta) {\n  this.allObjects().forEach((object) => {\n\n    if (object instanceof Ship){\n      this.createEngineParticles(object.pos[0], object.pos[1], \"white\");\n    }\n\n    object.move(delta);\n  });\n};\n\nGame.prototype.randomPosition = function () {\n  return [\n    Game.DIM_X * Math.random(),\n    Game.DIM_Y * Math.random()\n  ];\n};\n\nGame.prototype.remove = function (object) {\n  if (object instanceof Ship){\n    this.ships.splice(this.ships.indexOf(object), 1);\n  }\n  else if (object instanceof Bomb){\n    this.bombs.splice(this.bombs.indexOf(object), 1);\n  }\n  else if (object instanceof Enemy){\n    this.enemies.splice(this.enemies.indexOf(object), 1);\n  }\n  else if (object instanceof Particle){\n    this.particles.splice(this.particles.indexOf(object), 1);\n  }\n  else if (object instanceof ScorePoint){\n    this.scorePoints.splice(this.scorePoints.indexOf(object), 1);\n  }\n  else if (object instanceof EngineParticle){\n    this.engineParticles.splice(this.engineParticles.indexOf(object), 1);\n  }\n  else {\n    throw \"WTF\";\n  }\n  // if (object instanceof Bullet) {\n  //   this.bullets.splice(this.bullets.indexOf(object), 1);\n  // } else if (object instanceof Asteroid) {\n  //   this.asteroids.splice(this.asteroids.indexOf(object), 1);\n  // } else if (object instanceof Ship) {\n  //   this.ships.splice(this.ships.indexOf(object), 1);\n  // } else {\n  //   throw \"wtf?\";\n  // }\n};\n\nGame.prototype.removeInRadius = function(position){\n  let radius = 125;\n  // this.allObjects().forEach((obj) => {\n  //   if (obj instanceof Ship){\n  //     continue;\n  //   }\n  //   if (obj.pos[0] < (position[0] + radius) && obj.pos[0] > (position[0] - radius)){\n  //     if (obj.pos[1] < (position[1] + radius) && obj.pos[1] > (position[1] - radius)){\n  //       this.remove(obj);\n  //     }\n  //   }\n  // })\n\n  let objects = this.allObjects();\n  let removeList = [];\n  for (let i = 0 ; i < objects.length; i++){\n    let obj = objects[i];\n    if (obj instanceof Ship || obj instanceof Bomb || obj instanceof EngineParticle){\n      continue;\n    }\n    let dist = Util.dist(position, obj.pos);\n    if (dist <= radius){\n      removeList.push(obj);\n    }\n    // if (obj.pos[0] < (position[0] + radius) && obj.pos[0] > (position[0] - radius)){\n    //   if (obj.pos[1] < (position[1] + radius) && obj.pos[1] > (position[1] - radius)){\n    //     removeList.push(obj);\n    //   }\n    // }\n  }\n\n\n  removeList.forEach((obj) => {\n    let point = new ScorePoint({game: this, pos: obj.pos})\n    this.scorePoints.push(point);\n    this.remove(obj);\n  })\n}\n\nGame.prototype.explode = function(bomb){\n  this.removeInRadius(bomb.pos);\n  this.createExplosion(bomb.pos[0], bomb.pos[1], \"#FFA318\");\n  this.createExplosion(bomb.pos[0], bomb.pos[1], \"#525252\");\n  this.remove(bomb);\n\n}\n\nGame.prototype.step = function (delta) {\n  this.moveObjects(delta);\n  this.checkCollisions();\n};\n\nGame.prototype.wrap = function (pos) {\n  return [\n    Util.wrap(pos[0], Game.DIM_X), Util.wrap(pos[1], Game.DIM_Y)\n  ];\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 1\n ** module chunks = 0\n **/","function EngineParticle ()\n{\n\tthis.scale = 1.0;\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.radius = 20;\n\tthis.color = '#fff';\n\tthis.velocityX = 0;\n\tthis.velocityY = 0;\n\tthis.scaleSpeed = 0.5;\n\n\tthis.update = function()\n\t{\n\t\t// shrinking\n\t\tthis.scale -= this.scaleSpeed * 20 / 1000.0;\n\n\t\tif (this.scale <= 0)\n\t\t{\n\t\t\tthis.scale = 0;\n\t\t}\n\t\t// moving away from explosion center\n\t\tthis.x += this.velocityX * 20 /1000.0;\n\t\tthis.y += this.velocityY * 20 /1000.0;\n\t};\n\n\tthis.draw = function(context2D)\n\t{\n\t\t// translating the 2D context to the particle coordinates\n\t\tcontext2D.save();\n\t\tcontext2D.translate(this.x, this.y);\n\t\tcontext2D.scale(this.scale, this.scale);\n\n\t\t// drawing a filled circle in the particle's local space\n\t\tcontext2D.beginPath();\n\t\tcontext2D.arc(0, 0, this.radius, 0, Math.PI*2, true);\n\t\tcontext2D.closePath();\n\t\tcontext2D.fillStyle = this.color;\n\t\tcontext2D.fill();\n\n\t\tcontext2D.restore();\n\t};\n}\n\nmodule.exports = EngineParticle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/engine_particle.js\n ** module id = 2\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_object\");\nconst Util = require(\"./util\");\n\n\nconst Ship = function(options){\n  options.radius = Ship.RADIUS;\n  options.vel = options.vel || [0,0];\n  options.color = \"white\";\n  options.shape = \"circle\";\n\n  MovingObject.call(this, options);\n}\n\nShip.RADIUS = 15;\n\nUtil.inherits(Ship, MovingObject);\n\n// Ship.prototype.power = function(impulse) {\n//   this.vel[0] += impulse[0];\n//   this.vel[1] += impulse[1];\n// }\n\n\nShip.prototype.max_accel = function(accel){\n  if (accel[0] > 20){\n    accel[0] = 20;\n  }\n  else if (accel[0] < -20){\n    accel[0] = -20;\n  }\n  if (accel[1] > 20){\n    accel[1] = 20\n  }\n  else if (accel[1] < -20){\n    accel[1] = -20;\n  }\n  return accel;\n}\n\nShip.prototype.move = function(){\n  const mouseX = this.pos[0];\n  const mouseY = this.pos[1];\n  if (this.game.mousePos){\n    let accel = Util.findVector(this.pos, [this.game.mousePos[0], this.game.mousePos[1]]);\n    if (this.game.mousePos[0] < 50 || this.game.mousePos[0] > 1050 || this.game.mousePos[1] < 50 || this.game.mousePos[1] > 650){\n      accel = Util.findVector(this.pos, [this.game.mousePos[0] - 50, this.game.mousePos[1] - 50]);\n    }\n    let accel_maxed = this.max_accel(accel);\n    let newPos = [(this.pos[0] + accel_maxed[0]), (this.pos[1] + accel_maxed[1])];\n    let oldPos = this.pos.slice();\n    if (this.game.isOutOfBounds(newPos)){\n      if (newPos[0] <= 0 || newPos[0] >= 1000){\n        accel_maxed[0] = 0;\n      }\n      if (newPos[1] <= 0 || newPos[1] >= 600){\n        accel_maxed[1] = 0;\n      }\n      this.pos = oldPos;\n    }\n    this.pos = [(this.pos[0] + accel_maxed[0]), (this.pos[1] + accel_maxed[1])];\n  }\n}\n\n\nmodule.exports = Ship;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/ship.js\n ** module id = 3\n ** module chunks = 0\n **/","const Game = require('./game');\nconst Util = require('./util');\n\nconst MovingObject = function(options){\n  this.pos = options.pos;\n  this.vel = options.vel;\n  this.radius = options.radius\n  this.shape = options.shape;\n  this.color = options.color;\n  this.game = options.game;\n\n}\n\n\n\n\n\nMovingObject.prototype.collideWith = function (otherObject) {\n  // default do nothing\n};\n\nMovingObject.prototype.isCollidedWith = function(otherObject){\n  const centerDist = Util.dist(this.pos, otherObject.pos);\n  if (centerDist < (this.radius + otherObject.radius)){\n  }\n  return centerDist < (this.radius + otherObject.radius);\n};\n\nMovingObject.prototype.isWrappable = false;\n\n\nMovingObject.prototype.draw = function (ctx) {\n  ctx.fillStyle = this.color;\n\n  if (this.shape == \"circle\") {\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n  }\n  else if (this.shape == \"triangle\"){\n    ctx.beginPath();\n    ctx.moveTo(this.pos[0] + this.radius , this.pos[1] + this.radius);\n    ctx.lineTo(this.pos[0] , this.pos[1] - this.radius);\n    ctx.lineTo(this.pos[0] - this.radius, this.pos[1] + this.radius);\n    ctx.lineTo(this.pos[0] + this.radius, this.pos[1] + this.radius);\n    ctx.fill();\n  }\n  else if (this.shape == \"rectangle\"){\n    ctx.beginPath();\n    ctx.moveTo(this.pos[0] - this.radius, this.pos[1] - this.radius);\n    ctx.lineTo(this.pos[0] + this.radius, this.pos[1] - this.radius);\n    ctx.lineTo(this.pos[0] + this.radius, this.pos[1] + this.radius);\n    ctx.lineTo(this.pos[0] - this.radius, this.pos[1] + this.radius);\n    ctx.lineTo(this.pos[0] - this.radius, this.pos[1] - this.radius);\n    // ctx.rect(this.pos[0] - this.radius, this.pos[1] - this.radius, this.radius, this.radius)\n    ctx.fill();\n  }\n};\n\n\n\nMovingObject.prototype.remove = function(){\n  this.game.remove(this);\n}\n\n\nmodule.exports = MovingObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/moving_object.js\n ** module id = 4\n ** module chunks = 0\n **/","const Util = {\n  // Normalize the length of the vector to 1, maintaining direction.\n  dir (vec) {\n    var norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n\n  //gets random number in range\n  randomInRange(min, max){\n    return Math.random() * (max - min) + min;\n  },\n  // Find distance between two points.\n  dist (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n\n\n  randomFloat (min, max){\n  \treturn min + Math.random()*(max-min);\n  },\n\n  // Find the length of the vector.\n  norm (vec) {\n    return Util.dist([0, 0], vec);\n  },\n\n  //finds vector between two points\n  findVector(point1, point2) {\n    return [(point2[0] - point1[0]), (point2[1] - point1[1])]\n  },\n\n\n  // Return a randomly oriented vector with the given length.\n  randomVec (length) {\n    var deg = 2 * Math.PI * Math.random();\n    return Util.scale([Math.sin(deg), Math.cos(deg)], length);\n  },\n  // Scale the length of a vector by the given amount.\n  scale (vec, m) {\n    return [vec[0] * m, vec[1] * m];\n  },\n  inherits (ChildClass, BaseClass) {\n    function Surrogate () { this.constructor = ChildClass; }\n    Surrogate.prototype = BaseClass.prototype;\n    ChildClass.prototype = new Surrogate();\n  },\n\n  wrap (coord, max) {\n    if (coord < 0) {\n      return max - (coord % max);\n    } else if (coord > max) {\n      return coord % max;\n    } else {\n      return coord;\n    }\n  }\n};\n\nmodule.exports = Util;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/util.js\n ** module id = 5\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_object\");\nconst Util = require(\"./util\");\nconst Ship = require(\"./ship\");\n\nconst Bomb = function(options){\n  options.radius = Bomb.RADIUS;\n  options.color = \"#FFA318\";\n  options.shape = \"triangle\";\n  options.vel = Util.randomVec(10);\n  options.pos = options.game.randomPosition();\n\n  MovingObject.call(this, options);\n}\n\nBomb.RADIUS = 15;\n\nUtil.inherits(Bomb, MovingObject);\n\nBomb.prototype.maxVelocity = function(xvel, yvel){\n  let finalx = xvel;\n  let finaly = yvel;\n  if (xvel > 1){\n    finalx = 1;\n  }\n  else if (xvel < -1){\n    finalx = -1;\n  }\n\n  if (yvel > 1){\n    finaly = 1;\n  }\n  else if (yvel < -1){\n    finaly = -1;\n  }\n  return [finalx, finaly];\n}\n\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\nBomb.prototype.move = function(timeDelta){\n  //timeDelta is number of milliseconds since last move\n  //if the computer is busy the time delta will be larger\n  //in this case the MovingObject should move farther in this frame\n  //velocity of object is how far it should move in 1/60th of a second\n  const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n      offsetX = this.vel[0] * velocityScale,\n      offsetY = this.vel[1] * velocityScale;\n\n  const maxVel = this.maxVelocity(offsetX, offsetY)\n\n  const oldPos = this.pos.slice();\n  this.pos = [this.pos[0] + maxVel[0], this.pos[1] + maxVel[1]];\n\n  if (this.game.isOutOfBounds(this.pos)) {\n    if (this.pos[0] <= 0 || this.pos[0] >= 1000){\n      this.vel[0] *= -1;\n    }\n    if (this.pos[1] <= 0 || this.pos[1] >= 600){\n      this.vel[1] *= -1;\n    }\n    this.pos = oldPos;\n  }\n}\n\nBomb.prototype.collideWith = function(otherObject){\n  if (otherObject instanceof Ship){\n    this.game.explode(this);\n    return true;\n  }\n}\n\nmodule.exports = Bomb;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/bomb.js\n ** module id = 6\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_object\");\nconst Util = require(\"./util\");\nconst Ship = require(\"./ship\");\n\n\nconst Enemy = function(options){\n  options.radius = Enemy.RADIUS;\n  options.color = 'red';\n  options.shape = 'rectangle';\n  options.vel = [0,0];\n  this.start = 0;\n  MovingObject.call(this, options);\n}\n\n\nEnemy.RADIUS = 10;\n\nUtil.inherits(Enemy, MovingObject);\n\nEnemy.prototype.maxVelocity = function(xvel, yvel){\n  let finalx = xvel;\n  let finaly = yvel;\n  if (xvel > 2){\n    finalx = 2;\n  }\n  else if (xvel < -2){\n    finalx = -2;\n  }\n\n  if (yvel > 2){\n    finaly = 2;\n  }\n  else if (yvel < -2){\n    finaly = -2;\n  }\n  return [finalx, finaly];\n}\n\nEnemy.prototype.maxImpulse = function(impulse){\n  let finalx = impulse[0];\n  let finaly = impulse[1];\n  if (impulse[0] > 1){\n    finalx = 1;\n  }\n  else if (impulse[0] < -1){\n    finalx = -1;\n  }\n\n  if (impulse[1] > 1){\n    finaly = 1;\n  }\n  else if (impulse[1] < -1){\n    finaly = -1;\n  }\n  return [finalx, finaly];\n}\n\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\nEnemy.prototype.move = function(timeDelta){\n  //timeDelta is number of milliseconds since last move\n  //if the computer is busy the time delta will be larger\n  //in this case the MovingObject should move farther in this frame\n  //velocity of object is how far it should move in 1/60th of a second\n  if (this.start < 100){\n    this.start += 1;\n    return;\n  }\n  this.color = '#00ffff'\n  let impulse = Util.findVector(this.pos, this.game.ships[0].pos);\n  let maxImpulse = Util.dir(impulse);\n  let newVel = [this.vel[0] + maxImpulse[0], this.vel[1] + maxImpulse[1]];\n  let maxVel = this.maxVelocity(newVel[0], newVel[1]);\n  this.vel = maxVel;\n  this.pos = [this.pos[0] + maxVel[0], this.pos[1] + maxVel[1]];\n}\n\n\nEnemy.prototype.collideWith = function(otherObject){\n  if (this.color == 'red'){\n    return false;\n  }\n  if (otherObject instanceof Ship){\n    this.game.playing = false\n    $('#reset').css(\"visibility\", \"visible\");\n    $('#score').text(`Your score: ${this.game.score}`)\n    return true;\n  }\n}\n\n\nmodule.exports = Enemy;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/enemy.js\n ** module id = 7\n ** module chunks = 0\n **/","function Particle ()\n{\n\tthis.scale = 1.0;\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.radius = 20;\n\tthis.color = \"#000\";\n\tthis.velocityX = 0;\n\tthis.velocityY = 0;\n\tthis.scaleSpeed = 0.5;\n\n\tthis.update = function()\n\t{\n\t\t// shrinking\n\t\tthis.scale -= this.scaleSpeed * 20 / 1000.0;\n\n\t\tif (this.scale <= 0)\n\t\t{\n\t\t\tthis.scale = 0;\n\t\t}\n\t\t// moving away from explosion center\n\t\tthis.x += this.velocityX * 20 /1000.0;\n\t\tthis.y += this.velocityY * 20 /1000.0;\n\t};\n\n\tthis.draw = function(context2D)\n\t{\n\t\t// translating the 2D context to the particle coordinates\n\t\tcontext2D.save();\n\t\tcontext2D.translate(this.x, this.y);\n\t\tcontext2D.scale(this.scale, this.scale);\n\n\t\t// drawing a filled circle in the particle's local space\n\t\tcontext2D.beginPath();\n\t\tcontext2D.arc(0, 0, this.radius, 0, Math.PI*2, true);\n\t\tcontext2D.closePath();\n\n\t\tcontext2D.fillStyle = this.color;\n\t\tcontext2D.fill();\n\n\t\tcontext2D.restore();\n\t};\n}\n\nmodule.exports = Particle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/particle.js\n ** module id = 8\n ** module chunks = 0\n **/","const MovingObject = require(\"./moving_object\");\nconst Util = require(\"./util\");\nconst Ship = require(\"./ship\");\n\n\nconst ScorePoint = function(options){\n  options.radius = ScorePoint.RADIUS;\n  options.color = '#66ff33';\n  options.shape = \"circle\";\n  options.vel = Util.randomVec(1);\n  this.time = 0;\n\n  MovingObject.call(this , options);\n}\n\nScorePoint.RADIUS = 3;\n\nUtil.inherits(ScorePoint, MovingObject);\n\nScorePoint.prototype.maxVelocity = function(xvel, yvel){\n  let finalx = xvel;\n  let finaly = yvel;\n  if (xvel > 1.0){\n    finalx = 1.0;\n  }\n  else if (xvel < -1.0){\n    finalx = -1.0;\n  }\n\n  if (yvel > 1.0){\n    finaly = 1.0;\n  }\n  else if (yvel < -1.0){\n    finaly = -1.0;\n  }\n  return [finalx, finaly];\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\nScorePoint.prototype.move = function(timeDelta){\n  //timeDelta is number of milliseconds since last move\n  //if the computer is busy the time delta will be larger\n  //in this case the MovingObject should move farther in this frame\n  //velocity of object is how far it should move in 1/60th of a second\n\n  if (this.time == 160){\n    this.game.remove(this);\n    return;\n  }\n  if (this.time == 96){\n    this.color = 'white';\n  }\n  if (this.time == 104){\n    this.color = '#66ff33';\n  }\n\n  if (this.time == 140){\n    this.color = 'white';\n  }\n\n  if (this.time == 150){\n    this.color = '#66ff33';\n  }\n\n  this.time += 1;\n\n\n\n  const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA,\n      offsetX = this.vel[0] * velocityScale,\n      offsetY = this.vel[1] * velocityScale;\n\n  const maxVel = this.maxVelocity(offsetX, offsetY)\n\n  const distToShip = Util.dist(this.pos, this.game.ships[0].pos);\n  if (distToShip < 100){\n    let impulse = Util.findVector(this.pos, this.game.ships[0].pos);\n    let maxImpulse = Util.dir(impulse);\n    let newVel = [this.vel[0] + maxImpulse[0], this.vel[1] + maxImpulse[1]];\n    let maxVel = this.maxVelocity(newVel[0], newVel[1]);\n    this.vel = maxVel;\n    this.pos = [this.pos[0] + this.vel[0] , this.pos[1] + this.vel[1]];\n    return;\n  }\n\n  const oldPos = this.pos.slice();\n  this.pos = [this.pos[0] + maxVel[0], this.pos[1] + maxVel[1]];\n\n  if (this.game.isOutOfBounds(this.pos)) {\n    if (this.pos[0] <= 0 || this.pos[0] >= 1000){\n      this.vel[0] *= -1;\n    }\n    if (this.pos[1] <= 0 || this.pos[1] >= 600){\n      this.vel[1] *= -1;\n    }\n    this.pos = oldPos;\n  }\n}\n\nScorePoint.prototype.collideWith = function(otherObject){\n  if (otherObject instanceof Ship){\n    this.game.remove(this);\n    this.game.score += 1;\n  }\n}\n\n\n\nmodule.exports = ScorePoint;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/score_point.js\n ** module id = 9\n ** module chunks = 0\n **/","const GameView = function (game, ctx) {\n  this.ctx = ctx;\n  this.game = game;\n  // this.ship = this.game.addShip();\n  let self = this;\n  $(\"#mouseArea\").on(\"mousemove\", function(event){\n    const mouseX = event.offsetX;\n    const mouseY = event.offsetY;\n    self.game.mousePos = [mouseX, mouseY];\n  });\n\n  $(document).on('click', function(event){\n    console.log(event);\n  })\n\n  $('#startButton').on('click', function(event){\n    self.game.playing = true;\n    self.game.mousePos = [event.pageX, event.pageY];\n    $('#startModal').css(\"visibility\", \"hidden\");\n  })\n\n  $('#reset').css(\"visibility\",\"hidden\");\n\n  $('#restartButton').on('click', function(event){\n    self.game.reset();\n    self.game.playing = true;\n    self.game.mousePos = [event.pageX, event.pageY];\n    $('#reset').css(\"visibility\", \"hidden\");\n  })\n};\n\n\nGameView.prototype.start = function(){\n  this.lastTime = 0;\n  requestAnimationFrame(this.animate.bind(this));\n}\n\nGameView.prototype.animate = function(time){\n  if (this.game.playing){\n    const timeDelta = time - this.lastTime;\n    this.game.step(timeDelta);\n    this.game.draw(this.ctx, time);\n    this.lastTIme = time;\n\n  }\n  requestAnimationFrame(this.animate.bind(this));\n}\n\nmodule.exports = GameView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game_view.js\n ** module id = 10\n ** module chunks = 0\n **/"],"sourceRoot":""}